# Mini SGBDR - Gestion de Configuration

## Description du projet
Ce projet a pour objectif de développer un système de gestion de base de données relationnelles simplifié (SGBDR) en Java. Le projet comprend la gestion des configurations via un fichier de configuration et des tests pour valider les fonctionnalités implémentées.

---

## Structure des fichiers

### 1. `DBConfig.java`

**Description :**
La classe `DBConfig` est responsable de la gestion de la configuration du système de base de données, en particulier le chemin vers le dossier contenant les données du SGBDR.

**Responsabilités principales :**
- Stocker le chemin vers le dossier de données du SGBD.
- Charger la configuration à partir d'un fichier texte (par exemple, un fichier `config.txt`).
- Fournir un accès au chemin de la base de données et permettre de l'afficher.

**Méthodes :**
- `DBConfig(String dbpath)` : Ce constructeur initialise l'objet `DBConfig` avec le chemin spécifié.
- `static DBConfig LoadDBConfig(String filePath)` : Charge la configuration à partir d'un fichier texte, lit le fichier et retourne une instance de `DBConfig`.
- `String getDbpath()` : Retourne le chemin vers le dossier de données de la base.
- `void printConfig()` : Affiche le chemin de la base de données dans la console.

### 2. `DBConfigTest.java`

**Description :**
La classe `DBConfigTest` est une classe de test pour valider les fonctionnalités de la classe `DBConfig`. Elle permet de s'assurer que les configurations sont bien chargées, que ce soit via un chemin défini manuellement ou via un fichier de configuration.

**Responsabilités principales :**
- Tester la création manuelle d'une instance de `DBConfig` avec un chemin de base de données.
- Tester la création d'une instance de `DBConfig` à partir d'un fichier texte.
- Gérer et afficher les erreurs si le fichier de configuration n'est pas trouvé ou s'il y a un problème de lecture.


**Exemple d'exécution :**
```shell
DB Path: ../DB
Chemin défini manuellement :
DB Path: ../DB
Chemin lu à partir du fichier config.txt :



## Mise à jour : Gestion de l'espace disque

### 1. `DBConfig.java`
**Description : **
La classe DBConfig a été mise à jour pour inclure des paramètres liés à la gestion de l'espace disque dans le SGBD.

**Responsabilités principales :**
- Stocker le chemin vers le dossier de données du SGBD.
- Gérer la taille des pages (pagesize) et la taille maximale des fichiers (dm_maxfilesize).
- Charger ces paramètres à partir d'un fichier texte (config.txt), en plus de les définir manuellement.

**Méthodes mises à jour : **
- DBConfig(String dbpath, int pagesize, long dm_maxfilesize) : Ce constructeur initialise l'objet DBConfig avec le chemin, la taille des pages, et la taille maximale des fichiers.
- static DBConfig LoadDBConfig(String filePath) : Cette méthode charge la configuration à partir d'un fichier texte. Elle lit le fichier et retourne une instance de DBConfig avec les valeurs dbpath, pagesize, et dm_maxfilesize.
- String getDbpath() : Retourne le chemin vers le dossier de données.
- int getPagesize() : Retourne la taille des pages.
- long getMaxFilesize() : Retourne la taille maximale des fichiers.
- void printConfig() : Affiche les détails de la configuration dans la console.

### 2. `DBConfigTest.java`
**Description : **
La classe DBConfigTest a été modifiée pour valider les nouveaux paramètres de la configuration de l'espace disque.


**Responsabilités principales :**
- Tester la création manuelle d'une instance de DBConfig avec des valeurs spécifiques pour dbpath, pagesize, et dm_maxfilesize.
- Tester la création d'une instance de DBConfig à partir d'un fichier config.txt.
- Gérer et afficher les erreurs de lecture des paramètres si le fichier de configuration est incorrect ou manquant.


**Exemple d'exécution :**
```shell
Chemin défini manuellement
DB Path: ../DB
Page Size: 4096 bytes
Max File Size: 10485760 bytes

Chemin lu à partir du fichier config.txt
DB Path: ../DB
Page Size: 4096 bytes
Max File Size: 10485760 bytes